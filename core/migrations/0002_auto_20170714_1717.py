# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-14 17:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_base', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='virbocard',
            name='image_background',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='virbo_cards_as_background', to='django_base.ImageModel', verbose_name='背景图'),
        ),
        migrations.AddField(
            model_name='virbocard',
            name='image_card',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='virbo_cards', to='django_base.ImageModel', verbose_name='虚宝卡'),
        ),
        migrations.AddField(
            model_name='starmissionachievement',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='starmissionachievements_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='starboxrecord',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='starboxrecords_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='starboxrecord',
            name='live',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='star_box_records', to='core.Live', verbose_name='直播'),
        ),
        migrations.AddField(
            model_name='starboxrecord',
            name='star_box',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='core.StarBox', verbose_name='星光宝盒'),
        ),
        migrations.AddField(
            model_name='redbagrecord',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='redbagrecords_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='redbagrecord',
            name='live',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='red_bag_records', to='core.Live', verbose_name='直播'),
        ),
        migrations.AddField(
            model_name='prizetransaction',
            name='prize',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='core.Prize', verbose_name='礼物'),
        ),
        migrations.AddField(
            model_name='prizetransaction',
            name='user_credit',
            field=models.ForeignKey(blank=True, help_text='即余额减少的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prizetransactions_credit', to=settings.AUTH_USER_MODEL, verbose_name='贷方用户'),
        ),
        migrations.AddField(
            model_name='prizetransaction',
            name='user_debit',
            field=models.ForeignKey(blank=True, help_text='即余额增加的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prizetransactions_debit', to=settings.AUTH_USER_MODEL, verbose_name='借方用户'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prizeorders_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='coin_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders', to='core.CreditCoinTransaction', verbose_name='金幣消費记录'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='diamond_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders', to='core.CreditDiamondTransaction', verbose_name='主播鑽石记录'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='live_watch_log',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders', to='core.LiveWatchLog', verbose_name='观看记录'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='prize',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.Prize', verbose_name='礼物'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='receiver_prize_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders_as_receiver', to='core.PrizeTransaction', verbose_name='礼物记录'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='receiver_star_index_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders', to='core.CreditStarIndexReceiverTransaction', verbose_name='主播元气指數记录'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='sender_prize_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders_as_sender', to='core.PrizeTransaction', verbose_name='礼物记录'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='sender_star_index_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders', to='core.CreditStarIndexSenderTransaction', verbose_name='觀衆元气指數记录'),
        ),
        migrations.AddField(
            model_name='prizeorder',
            name='star_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_orders', to='core.CreditStarTransaction', verbose_name='观众消耗元氣记录'),
        ),
        migrations.AddField(
            model_name='prize',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='core.PrizeCategory', verbose_name='礼物分类'),
        ),
        migrations.AddField(
            model_name='prize',
            name='icon',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prize_as_icon', to='django_base.ImageModel', verbose_name='图标'),
        ),
        migrations.AddField(
            model_name='prize',
            name='stickers',
            field=models.ManyToManyField(blank=True, related_name='prizes_as_stickers', to='django_base.ImageModel', verbose_name='表情包'),
        ),
        migrations.AddField(
            model_name='notifications',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificationss_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='movie',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movies_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='movie',
            name='thumbnail',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movie', to='django_base.ImageModel', verbose_name='封面图片'),
        ),
        migrations.AddField(
            model_name='member',
            name='avatar',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member', to='django_base.ImageModel', verbose_name='头像'),
        ),
        migrations.AddField(
            model_name='member',
            name='referrer',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to=settings.AUTH_USER_MODEL, verbose_name='推荐人'),
        ),
        migrations.AddField(
            model_name='member',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='members', to='django_base.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='livewatchlog',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='livewatchlogs_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='livewatchlog',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='livewatchlogs', to='django_base.Comment', verbose_name='评论'),
        ),
        migrations.AddField(
            model_name='livewatchlog',
            name='live',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watch_logs', to='core.Live', verbose_name='直播'),
        ),
        migrations.AddField(
            model_name='livebarrage',
            name='audios',
            field=models.ManyToManyField(blank=True, related_name='livebarrages', to='django_base.AudioModel', verbose_name='音频'),
        ),
        migrations.AddField(
            model_name='livebarrage',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='livebarrages_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='livebarrage',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='livebarrages', to='django_base.ImageModel', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='livebarrage',
            name='live',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barrages', to='core.Live', verbose_name='直播'),
        ),
        migrations.AddField(
            model_name='livebarrage',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='livebarrages', to='django_base.VideoModel', verbose_name='视频'),
        ),
        migrations.AddField(
            model_name='live',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lives_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='live',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.LiveCategory', verbose_name='直播分类'),
        ),
        migrations.AddField(
            model_name='live',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='lives', to='django_base.Comment', verbose_name='评论'),
        ),
        migrations.AddField(
            model_name='live',
            name='informs',
            field=models.ManyToManyField(blank=True, related_name='lives', to='core.Inform', verbose_name='举报信息'),
        ),
        migrations.AddField(
            model_name='inform',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='informs_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='inform',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='informs', to='django_base.ImageModel', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='audios',
            field=models.ManyToManyField(blank=True, related_name='feedbacks', to='django_base.AudioModel', verbose_name='音频'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='feedbacks', to='django_base.ImageModel', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='feedbacks', to='django_base.VideoModel', verbose_name='视频'),
        ),
        migrations.AddField(
            model_name='familymissionachievement',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familymissionachievements_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='familymissionachievement',
            name='mission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='core.FamilyMission', verbose_name='任务'),
        ),
        migrations.AddField(
            model_name='familymission',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familymissions_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='familymission',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missions', to='core.Family', verbose_name='家族'),
        ),
        migrations.AddField(
            model_name='familymember',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familymembers_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='familymember',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='core.Family', verbose_name='家族'),
        ),
        migrations.AddField(
            model_name='familyarticle',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familyarticles_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='familyarticle',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='core.Family', verbose_name='家族'),
        ),
        migrations.AddField(
            model_name='family',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familys_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='family',
            name='logo',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='family', to='django_base.ImageModel', verbose_name='图标'),
        ),
        migrations.AddField(
            model_name='family',
            name='messages',
            field=models.ManyToManyField(blank=True, related_name='families', to='django_base.Message', verbose_name='家族消息'),
        ),
        migrations.AddField(
            model_name='family',
            name='users',
            field=models.ManyToManyField(related_name='families', through='core.FamilyMember', to=settings.AUTH_USER_MODEL, verbose_name='家族成员'),
        ),
        migrations.AddField(
            model_name='extraprize',
            name='prize_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_prizes', to='core.PrizeCategory', verbose_name='礼物分類'),
        ),
        migrations.AddField(
            model_name='extraprize',
            name='wallpaper',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_prize_as_wallpaper', to='django_base.ImageModel', verbose_name='壁纸'),
        ),
        migrations.AddField(
            model_name='diamondexchangerecord',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diamondexchangerecords_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='diamondexchangerecord',
            name='coin_transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='diamond_exchange_record', to='core.CreditCoinTransaction', verbose_name='金币交易流水'),
        ),
        migrations.AddField(
            model_name='diamondexchangerecord',
            name='diamond_transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='diamond_exchange_record', to='core.CreditDiamondTransaction', verbose_name='钻石交易流水'),
        ),
        migrations.AddField(
            model_name='dailycheckinlog',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dailycheckinlogs_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='dailycheckinlog',
            name='prize_star_transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.CreditStarTransaction', verbose_name='奖励星星流水记录'),
        ),
        migrations.AddField(
            model_name='creditstartransaction',
            name='user_credit',
            field=models.ForeignKey(blank=True, help_text='即余额减少的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditstartransactions_credit', to=settings.AUTH_USER_MODEL, verbose_name='贷方用户'),
        ),
        migrations.AddField(
            model_name='creditstartransaction',
            name='user_debit',
            field=models.ForeignKey(blank=True, help_text='即余额增加的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditstartransactions_debit', to=settings.AUTH_USER_MODEL, verbose_name='借方用户'),
        ),
        migrations.AddField(
            model_name='creditstarindexsendertransaction',
            name='user_credit',
            field=models.ForeignKey(blank=True, help_text='即余额减少的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditstarindexsendertransactions_credit', to=settings.AUTH_USER_MODEL, verbose_name='贷方用户'),
        ),
        migrations.AddField(
            model_name='creditstarindexsendertransaction',
            name='user_debit',
            field=models.ForeignKey(blank=True, help_text='即余额增加的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditstarindexsendertransactions_debit', to=settings.AUTH_USER_MODEL, verbose_name='借方用户'),
        ),
        migrations.AddField(
            model_name='creditstarindexreceivertransaction',
            name='user_credit',
            field=models.ForeignKey(blank=True, help_text='即余额减少的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditstarindexreceivertransactions_credit', to=settings.AUTH_USER_MODEL, verbose_name='贷方用户'),
        ),
        migrations.AddField(
            model_name='creditstarindexreceivertransaction',
            name='user_debit',
            field=models.ForeignKey(blank=True, help_text='即余额增加的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditstarindexreceivertransactions_debit', to=settings.AUTH_USER_MODEL, verbose_name='借方用户'),
        ),
        migrations.AddField(
            model_name='creditdiamondtransaction',
            name='live',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diamond_transactions', to='core.Live', verbose_name='直播'),
        ),
        migrations.AddField(
            model_name='creditdiamondtransaction',
            name='live_watch_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diamond_transactions', to='core.LiveWatchLog', verbose_name='直播参与记录'),
        ),
        migrations.AddField(
            model_name='creditdiamondtransaction',
            name='user_credit',
            field=models.ForeignKey(blank=True, help_text='即余额减少的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditdiamondtransactions_credit', to=settings.AUTH_USER_MODEL, verbose_name='贷方用户'),
        ),
        migrations.AddField(
            model_name='creditdiamondtransaction',
            name='user_debit',
            field=models.ForeignKey(blank=True, help_text='即余额增加的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditdiamondtransactions_debit', to=settings.AUTH_USER_MODEL, verbose_name='借方用户'),
        ),
        migrations.AddField(
            model_name='creditcointransaction',
            name='user_credit',
            field=models.ForeignKey(blank=True, help_text='即余额减少的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditcointransactions_credit', to=settings.AUTH_USER_MODEL, verbose_name='贷方用户'),
        ),
        migrations.AddField(
            model_name='creditcointransaction',
            name='user_debit',
            field=models.ForeignKey(blank=True, help_text='即余额增加的用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditcointransactions_debit', to=settings.AUTH_USER_MODEL, verbose_name='借方用户'),
        ),
        migrations.AddField(
            model_name='celebritycategory',
            name='leader',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='celebrity_categories', to=settings.AUTH_USER_MODEL, verbose_name='当前获得者'),
        ),
        migrations.AddField(
            model_name='banner',
            name='image',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='banner', to='django_base.ImageModel', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='badge',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='badges_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='badge',
            name='icon',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='badge', to='django_base.ImageModel', verbose_name='图标'),
        ),
        migrations.AddField(
            model_name='activityparticipation',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='core.Activity', verbose_name='活动'),
        ),
        migrations.AddField(
            model_name='activityparticipation',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activityparticipations_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='activitypage',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='core.Activity', verbose_name='活动'),
        ),
        migrations.AddField(
            model_name='activitypage',
            name='banner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_pages', to='django_base.ImageModel', verbose_name='海报'),
        ),
        migrations.AddField(
            model_name='activity',
            name='thumbnail',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activity', to='django_base.ImageModel', verbose_name='活动海报'),
        ),
        migrations.AddField(
            model_name='activeevent',
            name='audios',
            field=models.ManyToManyField(blank=True, related_name='activeevents', to='django_base.AudioModel', verbose_name='音频'),
        ),
        migrations.AddField(
            model_name='activeevent',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activeevents_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='activeevent',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='activeevents', to='django_base.Comment', verbose_name='评论'),
        ),
        migrations.AddField(
            model_name='activeevent',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='activeevents', to='django_base.ImageModel', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='activeevent',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='activeevents', to='django_base.VideoModel', verbose_name='视频'),
        ),
        migrations.AlterUniqueTogether(
            name='activityparticipation',
            unique_together=set([('activity', 'author')]),
        ),
    ]
