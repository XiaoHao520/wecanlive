# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-16 15:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('django_base', '0002_adminlog'),
        ('core', '0003_auto_20170616_1159'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, default='', help_text='可以是直接链接或者JSON类型的路由描述', max_length=255, verbose_name='跳转链接')),
                ('remark', models.TextField(blank=True, default='', verbose_name='备注')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越小越靠前', verbose_name='轮播次序')),
                ('image', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='banner', to='django_base.ImageModel', verbose_name='图片')),
            ],
            options={
                'verbose_name': '节目Banner',
                'verbose_name_plural': '节目Banner',
                'db_table': 'core_banner',
            },
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='robot', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('count_friend', models.IntegerField(default=0, verbose_name='好友数')),
                ('count_follow', models.IntegerField(default=0, verbose_name='追踪数')),
                ('count_live', models.IntegerField(default=0, verbose_name='发起直播数')),
                ('count_diamond', models.IntegerField(default=0, verbose_name='钻石数')),
                ('count_prize_sent', models.IntegerField(default=0, verbose_name='送出礼物数')),
            ],
            options={
                'verbose_name': '机器人',
                'verbose_name_plural': '机器人',
                'db_table': 'core_robot',
            },
        ),
        migrations.AddField(
            model_name='creditdiamondtransaction',
            name='live',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diamond_transactions', to='core.Live', verbose_name='直播'),
        ),
        migrations.AddField(
            model_name='creditdiamondtransaction',
            name='live_watch_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diamond_transactions', to='core.LiveWatchLog', verbose_name='直播参与记录'),
        ),
        migrations.AddField(
            model_name='creditdiamondtransaction',
            name='type',
            field=models.CharField(choices=[('LIVE_GIFT', '直播赠送')], default='', max_length=20, verbose_name='流水类型'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='live',
            name='adcode',
            field=models.IntegerField(default=0, help_text='保存时试图自动获取区划编码', verbose_name='行政区划编码'),
        ),
        migrations.AddField(
            model_name='live',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.LiveCategory', verbose_name='直播分类'),
        ),
        migrations.AddField(
            model_name='live',
            name='date_end',
            field=models.DateTimeField(blank=True, null=True, verbose_name='结束时间'),
        ),
        migrations.AddField(
            model_name='live',
            name='geo_info',
            field=models.TextField(blank=True, default='', help_text='保存时自动尝试获取地理信息', verbose_name='地理信息'),
        ),
        migrations.AddField(
            model_name='live',
            name='geo_label',
            field=models.CharField(blank=True, default='', max_length=255, verbose_name='位置标签'),
        ),
        migrations.AddField(
            model_name='live',
            name='geo_lat',
            field=models.FloatField(blank=True, default=0, verbose_name='纬度'),
        ),
        migrations.AddField(
            model_name='live',
            name='geo_lng',
            field=models.FloatField(blank=True, default=0, verbose_name='经度'),
        ),
        migrations.AddField(
            model_name='live',
            name='is_free',
            field=models.BooleanField(default=True, verbose_name='是否免费'),
        ),
        migrations.AddField(
            model_name='live',
            name='is_private',
            field=models.BooleanField(default=False, help_text='如果设置隐藏，将不能在外部列表查询到此直播', verbose_name='是否隐藏'),
        ),
        migrations.AddField(
            model_name='live',
            name='push_url',
            field=models.URLField(default='', verbose_name='推流地址'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='live',
            name='quota',
            field=models.IntegerField(default=0, help_text='上限观众人数，0为不做限制', verbose_name='上限观众人数'),
        ),
        migrations.AddField(
            model_name='live',
            name='radius',
            field=models.FloatField(blank=True, default=0, verbose_name='半径'),
        ),
        migrations.AddField(
            model_name='livewatchlog',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='livewatchlogs', to='django_base.Comment', verbose_name='评论'),
        ),
        migrations.AddField(
            model_name='movie',
            name='category',
            field=models.CharField(blank=True, choices=[('HOT', '热门视频'), ('SPECIAL', '特辑视频')], default='', max_length=20, verbose_name='影片分类'),
        ),
        migrations.AddField(
            model_name='movie',
            name='tag_color',
            field=models.CharField(default='#FF0000', max_length=20, verbose_name='标签颜色'),
        ),
        migrations.AddField(
            model_name='movie',
            name='tag_name',
            field=models.CharField(blank=True, default='', max_length=100, verbose_name='标签名称'),
        ),
        migrations.AddField(
            model_name='movie',
            name='thumbnail',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movie', to='django_base.ImageModel', verbose_name='封面图片'),
        ),
    ]
