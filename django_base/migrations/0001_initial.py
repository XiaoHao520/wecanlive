# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-14 10:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressDistrict',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='区划编码')),
                ('name', models.CharField(blank=True, default='', max_length=45, verbose_name='名称')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='django_base.AddressDistrict', verbose_name='上级')),
            ],
            options={
                'verbose_name': '地区',
                'verbose_name_plural': '地区',
                'db_table': 'base_address_district',
            },
        ),
        migrations.CreateModel(
            name='AudioModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('audio', models.FileField(blank=True, null=True, upload_to='audio/', verbose_name='音频')),
                ('duration', models.FloatField(blank=True, default=0, verbose_name='时长')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('audio_mp3', models.FileField(blank=True, null=True, upload_to='audio/mp3/', verbose_name='音频mp3文件')),
                ('audio_ogg', models.FileField(blank=True, null=True, upload_to='audio/ogg/', verbose_name='音频ogg文件')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audiomodels_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '音频',
                'verbose_name_plural': '音频',
                'db_table': 'base_audio',
            },
        ),
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('TEXT', '文本'), ('IMAGE', '图片'), ('VIDEO', '视频'), ('AUDIO', '音频'), ('COMBO', '混合'), ('OBJECT', '对象'), ('PROMPT', '提示')], default='TEXT', max_length=20, verbose_name='消息类型')),
                ('content', models.TextField(blank=True, default='', verbose_name='内容')),
                ('params', models.TextField(blank=True, default='', help_text='用 json 存放一些动态的参数', verbose_name='参数')),
                ('use_sms', models.BooleanField(default=False, verbose_name='是否推送手机短信')),
                ('use_jpush', models.BooleanField(default=False, verbose_name='是否推送手机通知')),
                ('use_email', models.BooleanField(default=False, verbose_name='是否推送电子邮件')),
                ('use_wechat', models.BooleanField(default=False, verbose_name='是否推送微信公众号模板消息')),
                ('status', models.CharField(choices=[('DRAFT', '草稿'), ('DONE', '已发送')], default='DRAFT', max_length=20, verbose_name='状态')),
                ('date_sent', models.DateTimeField(blank=True, null=True, verbose_name='推送时间')),
                ('audios', models.ManyToManyField(blank=True, related_name='broadcasts', to='django_base.AudioModel', verbose_name='音频')),
                ('groups', models.ManyToManyField(blank=True, related_name='broadcasts', to='auth.Group', verbose_name='推送组')),
            ],
            options={
                'verbose_name': '消息推送',
                'verbose_name_plural': '消息推送',
                'db_table': 'base_broadcast',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('type', models.CharField(choices=[('TEXT', '文本'), ('IMAGE', '图片'), ('VIDEO', '视频'), ('AUDIO', '音频'), ('COMBO', '混合'), ('OBJECT', '对象'), ('PROMPT', '提示')], default='TEXT', max_length=20, verbose_name='消息类型')),
                ('params', models.TextField(blank=True, default='', help_text='用 json 存放一些动态的参数', verbose_name='参数')),
                ('content', models.TextField(verbose_name='内容')),
                ('audios', models.ManyToManyField(blank=True, related_name='comments', to='django_base.AudioModel', verbose_name='音频')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'db_table': 'base_comment',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, default='', max_length=255, verbose_name='附带信息')),
                ('type', models.CharField(choices=[('OPEN', '开放'), ('SILENT', '不提示信息'), ('BLACKLISTED', '黑名单')], max_length=20, verbose_name='联系人状态')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contacts_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts_related', to=settings.AUTH_USER_MODEL, verbose_name='目标用户')),
            ],
            options={
                'verbose_name': '联系人',
                'verbose_name_plural': '联系人',
                'db_table': 'base_contact',
            },
        ),
        migrations.CreateModel(
            name='GroupInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('is_builtin', models.BooleanField(default=False, verbose_name='是否内置')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='描述')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='auth.Group', verbose_name='组')),
            ],
            options={
                'verbose_name': '组信息',
                'verbose_name_plural': '组信息',
                'db_table': 'base_group_info',
            },
        ),
        migrations.CreateModel(
            name='ImageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('image', models.ImageField(upload_to='images/', verbose_name='图片')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imagemodels_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '图片',
                'verbose_name_plural': '图片',
                'db_table': 'base_image',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('frequency', models.BigIntegerField(default=0, verbose_name='词频')),
                ('subject', models.CharField(blank=True, max_length=50, verbose_name='主题')),
            ],
            options={
                'verbose_name': '关键词',
                'verbose_name_plural': '关键词',
                'db_table': 'base_keyword',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.IntegerField(blank=True, default=0, verbose_name='序号')),
                ('name', models.CharField(help_text='建议与路由名称同步', max_length=100, verbose_name='菜单名称')),
                ('title', models.CharField(max_length=150, verbose_name='菜单标题')),
                ('groups', models.ManyToManyField(related_name='menus', to='auth.Group', verbose_name='组')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='django_base.Menu', verbose_name='上级')),
            ],
            options={
                'verbose_name': '菜单',
                'ordering': ['seq'],
                'db_table': 'base_menu',
                'verbose_name_plural': '菜单',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('type', models.CharField(choices=[('TEXT', '文本'), ('IMAGE', '图片'), ('VIDEO', '视频'), ('AUDIO', '音频'), ('COMBO', '混合'), ('OBJECT', '对象'), ('PROMPT', '提示')], default='TEXT', max_length=20, verbose_name='消息类型')),
                ('content', models.TextField(blank=True, default='', verbose_name='内容')),
                ('params', models.TextField(blank=True, default='', help_text='用 json 存放一些动态的参数', verbose_name='参数')),
                ('subject', models.CharField(blank=True, default='', max_length=20, verbose_name='主题分类')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('audios', models.ManyToManyField(blank=True, related_name='messages', to='django_base.AudioModel', verbose_name='音频')),
                ('broadcast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='django_base.Broadcast', verbose_name='推送')),
                ('images', models.ManyToManyField(blank=True, related_name='messages', to='django_base.ImageModel', verbose_name='图片')),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages_received', to=settings.AUTH_USER_MODEL, verbose_name='接收用户')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages_sent', to=settings.AUTH_USER_MODEL, verbose_name='发送用户')),
            ],
            options={
                'verbose_name': '消息',
                'verbose_name_plural': '消息',
                'db_table': 'base_message',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=45, unique=True, verbose_name='选项关键字')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='选项名称')),
                ('value', models.CharField(blank=True, default='', max_length=1000, verbose_name='选项值')),
            ],
            options={
                'verbose_name': '系统选项',
                'verbose_name_plural': '系统选项',
                'db_table': 'settings_option',
            },
        ),
        migrations.CreateModel(
            name='PlannedTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=100, verbose_name='任务')),
                ('args', models.TextField(blank=True, default='', help_text='JSON 表示的参数列表', verbose_name='参数')),
                ('kwargs', models.TextField(blank=True, default='', help_text='JSON 表示的参数字典', verbose_name='字典参数')),
                ('date_planned', models.DateTimeField(verbose_name='计划时间')),
                ('date_execute', models.DateTimeField(blank=True, null=True, verbose_name='执行时间')),
                ('traceback', models.TextField(blank=True, default='', verbose_name='错误信息')),
                ('status', models.CharField(default='PLANNED', max_length=20, verbose_name='状态')),
            ],
            options={
                'verbose_name': '计划任务',
                'verbose_name_plural': '计划任务',
                'db_table': 'base_cron_planned_task',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('taxonomy', models.CharField(blank=True, default='', max_length=50, verbose_name='分类')),
                ('score', models.FloatField(verbose_name='评分')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '评分',
                'verbose_name_plural': '评分',
                'db_table': 'base_rating',
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('version', models.CharField(blank=True, default='', max_length=20, unique=True, verbose_name='版本号')),
                ('platform', models.CharField(blank=True, default='', max_length=20, verbose_name='客户端')),
                ('url', models.CharField(blank=True, default='', max_length=255, verbose_name='下载地址')),
                ('date_release', models.DateTimeField(blank=True, null=True, verbose_name='发布时间')),
                ('description', models.TextField(blank=True, default='', verbose_name='描述')),
            ],
            options={
                'verbose_name': '发布版本',
                'verbose_name_plural': '发布版本',
                'db_table': 'base_release',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'db_table': 'base_tag',
            },
        ),
        migrations.CreateModel(
            name='UserMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('subject', models.CharField(max_length=20, verbose_name='标记类型')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usermarks_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': '用户标记',
                'verbose_name_plural': '用户标记',
                'db_table': 'base_user_mark',
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=128, verbose_name='选项名')),
                ('value', models.TextField(blank=True, default='', verbose_name='选项值')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='设置时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户首选项',
                'verbose_name_plural': '用户首选项',
                'db_table': 'base_user_preference',
            },
        ),
        migrations.CreateModel(
            name='UserPreferenceField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=128, verbose_name='选项关键字')),
                ('label', models.CharField(max_length=255, verbose_name='选项标签')),
                ('control', models.CharField(choices=[('TEXT', '单行文本'), ('TEXTAREA', '多行文本'), ('RICHTEXT', '富文本编辑'), ('DIGIT', '数字（整数）'), ('NUMBER', '数字（小数）'), ('PERCENT', '百分比'), ('CURRENCY', '货币'), ('IMAGE', '图片'), ('FILE', '文件'), ('CHECKBOX', '多选按钮'), ('RADIOBOX', '单选按钮'), ('SELECT', '下拉选项')], default='TEXT', max_length=20, verbose_name='控件类型')),
                ('help_text', models.TextField(verbose_name='字段说明')),
                ('default', models.TextField(verbose_name='默认值')),
                ('meta', models.TextField(help_text='用于存储可用选项等信息', verbose_name='元数据')),
            ],
            options={
                'verbose_name': '用户首选项字段',
            },
        ),
        migrations.CreateModel(
            name='VideoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='名称')),
                ('is_del', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_sticky', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sorting', models.SmallIntegerField(default=0, help_text='数字越大越靠前', verbose_name='排序')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('video', models.FileField(upload_to='video/', verbose_name='视频')),
                ('duration', models.FloatField(blank=True, default=0, verbose_name='时长')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videomodels_owned', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '视频',
                'verbose_name_plural': '视频',
                'db_table': 'base_video',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='messages', to='django_base.VideoModel', verbose_name='视频'),
        ),
        migrations.AddField(
            model_name='comment',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='comments', to='django_base.ImageModel', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='django_base.Comment', verbose_name='上级'),
        ),
        migrations.AddField(
            model_name='comment',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='comments', to='django_base.VideoModel', verbose_name='视频'),
        ),
        migrations.AddField(
            model_name='broadcast',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='broadcasts', to='django_base.ImageModel', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='broadcast',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='broadcasts', to=settings.AUTH_USER_MODEL, verbose_name='推送用户'),
        ),
        migrations.AddField(
            model_name='broadcast',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='broadcasts', to='django_base.VideoModel', verbose_name='视频'),
        ),
        migrations.AlterUniqueTogether(
            name='userpreference',
            unique_together=set([('user', 'key')]),
        ),
        migrations.AlterUniqueTogether(
            name='usermark',
            unique_together=set([('author', 'content_type', 'object_id', 'subject')]),
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together=set([('author', 'user')]),
        ),
    ]
